const e=()=>(e,{Workflow:t,Tinyflow:n,TinyflowError:o})=>{e.instances=new Map;const{instances:s,listeners:r}=e;return n.get=e=>s.get(e),n.all=()=>[...s.values()],n.clear=()=>{const e=[...s.keys()];for(const t of e){n.get(t).cancel(),n.dispose(t)}},n.create=e=>{const n=new t(e);return s.set(n.id,n),n},n.dispose=(e,{force:t=!1}={})=>{const n=s.get(e);if(!n)throw new o(`Workflow does not exist by id ${e}`);if(!t&&"active"===n.state)throw new o(`Cannot dispose active workflow "${n.name}"`,{instanceId:e});n.current&&(n.current.off(),n.current=null),n.off(),r.delete(n),s.delete(e)},()=>{delete e.instances,delete n.get,delete n.all,delete n.clear,delete n.create,delete n.dispose}};export{e as withInstances};//# sourceMappingURL=withInstances.min.js.map
