var withInstances=function(e){"use strict";function t(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||n(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o={},a=o.withInstances=function(){return function(e,r){var o=r.Workflow,a=r.Tinyflow,i=r.TinyflowError;e.instances=new Map;var l=e.instances,u=e.listeners;return a.get=function(e){return l.get(e)},a.all=function(){return t(l.values())},a.clear=function(){var e,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}}(t(l.keys()));try{for(r.s();!(e=r.n()).done;){var o=e.value;a.get(o).cancel(),a.dispose(o)}}catch(e){r.e(e)}finally{r.f()}},a.create=function(e){var t=new o(e);return l.set(t.id,t),t},a.dispose=function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).force,n=void 0!==t&&t,r=l.get(e);if(!r)throw new i("Workflow does not exist by id ".concat(e));if(!n&&"active"===r.state)throw new i('Cannot dispose active workflow "'.concat(r.name,'"'),{instanceId:e});r.current&&(r.current.off(),r.current=null),r.off(),u.delete(r),l.delete(e)},function(){delete e.instances,delete a.get,delete a.all,delete a.clear,delete a.create,delete a.dispose}}};return e.default=o,e.withInstances=a,Object.defineProperty(e,"__esModule",{value:!0}),e}({});//# sourceMappingURL=withInstances.iife.min.js.map
