{"version":3,"file":"withInstances.cjs.js","sources":["../withInstances.js"],"sourcesContent":["/**\n * @namespace Tinyflow\n */\n\n/**\n * Tinyflow extension to manage instances (create, get, dispose).\n *\n * @function\n * @export\n * @return {function(*, {Workflow: *, Tinyflow: *, TinyflowError: *}): function(): void}\n */\nexport const withInstances = (/* config */) => (internal, { Workflow, Tinyflow, TinyflowError }) => {\n  internal.instances = new Map()\n  const { instances, listeners } = internal\n\n  /**\n   * Gets a workflow instance by its id\n   * @method\n   * @param id {string}\n   * @returns {Workflow}\n   */\n  Tinyflow.get = id => instances.get(id)\n\n  /**\n   * Returns all non-disposed workflows of any state.\n   * @method\n   * @return {Workflow[]}\n   */\n  Tinyflow.all = () => [...instances.values()]\n\n  /**\n   * Clears all instances. By default, all engines are shut down\n   * and fire the end event.\n   * @method\n   */\n  Tinyflow.clear = () => {\n    const ids = [...instances.keys()]\n    for (const instanceId of ids) {\n      const workflow = Tinyflow.get(instanceId)\n      workflow.cancel()\n      Tinyflow.dispose(instanceId)\n    }\n  }\n\n  /**\n   * Creates a new workflow instance by given workflow definitions.\n   *\n   * @param definition {object} the workflow definitions object\n   * @returns {Workflow}\n   */\n  Tinyflow.create = (definition) => {\n    const workflow = new Workflow(definition)\n    instances.set(workflow.id, workflow)\n    return workflow\n  }\n\n  /**\n   * Fully disposes a workflow, including any event listener\n   * to it, or its current step.\n   * Once complete it will finally remove the workflow from\n   * the internal instances list.\n   * @param instanceId {string}\n   * @param force {boolean=}\n   */\n  Tinyflow.dispose = (instanceId, { force = false } = {}) => {\n    const workflow = instances.get(instanceId)\n    if (!workflow) {\n      throw new TinyflowError(`Workflow does not exist by id ${instanceId}`)\n    }\n    if (!force && workflow.state === 'active') {\n      throw new TinyflowError(`Cannot dispose active workflow \"${workflow.name}\"`, { instanceId })\n    }\n    if (workflow.current) {\n      workflow.current.off()\n      workflow.current = null\n    }\n    workflow.off()\n    listeners.delete(workflow)\n    instances.delete(instanceId)\n  }\n\n  // dispose method for complete cleanup of this extension\n  return () => {\n    delete internal.instances\n    delete Tinyflow.get\n    delete Tinyflow.all\n    delete Tinyflow.clear\n    delete Tinyflow.create\n    delete Tinyflow.dispose\n  }\n}\n"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","withInstances","internal","_ref","Workflow","Tinyflow","TinyflowError","instances","Map","listeners","get","id","all","values","clear","ids","keys","_iterator","_step","instanceId","workflow","cancel","dispose","create","definition","set","_ref2","arguments","undefined","_ref2$force","force","concat","state","current","off"],"mappings":"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"}